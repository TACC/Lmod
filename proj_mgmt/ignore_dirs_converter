#!/usr/bin/env lua
-- -*- lua -*-
--------------------------------------------------------------------------
-- Lmod License
--------------------------------------------------------------------------
--
--  Lmod is licensed under the terms of the MIT license reproduced below.
--  This means that Lmod is free software and can be used for both academic
--  and commercial purposes at absolutely no cost.
--
--  ----------------------------------------------------------------------
--
--  Copyright (C) 2008-2025 Robert McLay
--
--  Permission is hereby granted, free of charge, to any person obtaining
--  a copy of this software and associated documentation files (the
--  "Software"), to deal in the Software without restriction, including
--  without limitation the rights to use, copy, modify, merge, publish,
--  distribute, sublicense, and/or sell copies of the Software, and to
--  permit persons to whom the Software is furnished to do so, subject
--  to the following conditions:
--
--  The above copyright notice and this permission notice shall be
--  included in all copies or substantial portions of the Software.
--
--  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
--  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
--  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
--  NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
--  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
--  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
--  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
--  THE SOFTWARE.
--
--------------------------------------------------------------------------
local concatTbl = table.concat

--------------------------------------------------------------------------
-- Trim trailing blanks from a string.

function string:trim()
   local ja = self:find("%S")
   if (ja == nil) then
      return ""
   end
   local  jb = self:find("%s+$") or 0
   local  s  = self:sub(ja,jb-1)
   return s
end

--------------------------------------------------------------------------
-- Return iterator generator for splitting a string into pieces.
function string:split(pat)
   pat  = pat or "%s+"
   local st, g = 1, self:gmatch("()("..pat..")")
   local function l_getter(self, segs, seps, sep, cap1, ...)
      st = sep and seps + #sep
      return self:sub(segs, (seps or 0) - 1), cap1 or sep, ...
   end
   local function l_splitter(self)
      if st then return l_getter(self, st, g()) end
   end
   return l_splitter, self
end

--------------------------------------------------------------------------
-- Wrap *s*
-- @param s Input string

function wrapper(s)
   return "[\\\"".. s .. "\\\"] = true, "
end

--------------------------------------------------------------------------
-- Convert input list of directories into lua table.
function main()
   local a = {}
   for i=1,#arg do
      local line = arg[i]
      for s in line:split(",") do
         s = s:trim()
         if (s ~= "") then
            a[#a+1] = wrapper(s)
            if (s:len() > 8) then
               a[#a+1] = wrapper(s:sub(1,8))
            end
         end
      end
   end
   print(concatTbl(a,""))
end

main()
