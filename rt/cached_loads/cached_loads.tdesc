-- -*- lua -*-
local testName = "cached_loads"

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 Test cached loads
   ]],
   keywords = {testName },

   active = 1,
   testName = testName,
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     MODULEPATH_ROOT=$(outputDir)/mf;  export MODULEPATH_ROOT
     MODULEPATH=$MODULEPATH_ROOT/Core; export MODULEPATH

     cacheDir=`userCacheDir`

     remove_generated_lmod_files mf/Core/B
     
     runLmod --version              # 1

     cp -r $(testDir)/mf .
     export LMOD_CACHED_LOADS=1
     runLmod load  C openfoam       # 2
     unset LMOD_CACHED_LOADS
     runLmod purge                  # 3

     mkdir -p $cacheDir
     buildSpiderT $MODULEPATH > $cacheDir/spiderT.lua

     mkdir mf/Core/B
     cp    mf/Core/A/1.0.lua mf/Core/B

     runLmod load   A               # 4
     runLmod load   B               # 5
     runLmod list                   # 6
     runLmod unload B               # 7

     export LMOD_CACHED_LOADS=1
     runLmod load   B               # 8
     runLmod list                   # 9

     export LMOD_IGNORE_CACHE=1
     runLmod load   B               #10
     runLmod list                   #11
    
     mv $cacheDir/spiderT.lua $cacheDir/old.spiderT.lua 

     #----------------------------------------
     # Issue #780: Rebuild cache issues
     runLmod    purge               #12
     unsetMT
     export MODULEPATH_ROOT=$(testDir)/mf2
     export MODULEPATH=$MODULEPATH_ROOT/toolchains
     buildSpiderT $MODULEPATH > $cacheDir/spiderT.lua
     export LMOD_CACHED_LOADS=1
     unset LMOD_IGNORE_CACHE
     runLmod load toolchain/gcc     #13
     runLmod load netcdf            #14
     runLmod load gcc/11 netcdf     #15
     runLmod load toolchain/intel   #16
     
     #----------------------------------------
     # Issue #780: Empty directory in MODULEPATH test
     runLmod    purge               #17
     unsetMT
     export MODULEPATH_ROOT=$(testDir)/mf2
     export MODULEPATH=$MODULEPATH_ROOT/toolchains
     export LMOD_CACHED_LOADS=1
     unset LMOD_IGNORE_CACHE
     
     # Create empty directory and add it to MODULEPATH (this triggers the bug)
     mkdir -p $(testDir)/empty_dir
     runLmod use $(testDir)/empty_dir  #18
     
     # Try to load toolchain/gcc - this should work with controlled fallback behavior
     runLmod load toolchain/gcc  #19 - Should show controlled FALLBACK for empty_dir
     
     #----------------------------------------
     # Issue #780: Validate performance regression fix
     #----------------------------------------
     echo "=== Validating performance regression fix behavior ===" >&2
     runLmod purge               #20
     
     # Test normal cache building (should NOT trigger expensive fallbacks)
     cacheDir=`userCacheDir`
     rm -rf $cacheDir
     runLmod load toolchain/gcc  #21 - Should show SUCCESS or normal cache building
     
     # Test controlled fallback with pre-built cache
     buildSpiderT $MODULEPATH > $cacheDir/spiderT.lua  
     mkdir -p $(testDir)/fallback_test_dir
     runLmod use $(testDir)/fallback_test_dir  #22
     runLmod load toolchain/gcc  #23 - Should show FALLBACK only for fallback_test_dir
     
     HOME=$ORIG_HOME
     cat _stdout.[0-9][0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f results.csv
     wrapperDiff --csv results.csv $(testDir)/out.txt out.txt
     wrapperDiff --csv results.csv $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) results.csv
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
