===========================
step 1
lua ProjectDIR/src/lmod.in.lua shell --regression_testing --version
===========================
Modules based on Lua: Version 8.6.9  2022-02-02 11:25 -04:00
    https://lmod.readthedocs.io
===========================
step 2
lua ProjectDIR/src/lmod.in.lua shell --regression_testing use -a ProjectDIR/rt/properties/mf/Core
===========================
===========================
step 3
lua ProjectDIR/src/lmod.in.lua shell --regression_testing use -a ProjectDIR/rt/properties/mf/bio
===========================
===========================
step 4
lua ProjectDIR/src/lmod.in.lua shell --regression_testing use -a ProjectDIR/rt/properties/mf/cae
===========================
===========================
step 5
lua ProjectDIR/src/lmod.in.lua shell --regression_testing load PrgEnv
===========================
===========================
step 6
lua ProjectDIR/src/lmod.in.lua shell --regression_testing list
===========================
Currently Loaded Modules:
  1) mkl/10.3 (*)   3) b/1.0 (m)   5) d/1.0  (@)
  2) a/1.0          4) c/1.0 (o)   6) PrgEnv
  Where:
   *:  built for host, native MIC and offload to the MIC
   @:  built natively for MIC and GPU and offload to the MIC
   m:  built for host and native MIC
   o:  built for offload to the MIC only
===========================
step 7
lua ProjectDIR/src/lmod.in.lua shell --regression_testing avail
===========================
ProjectDIR/rt/properties/mf/Core
   PrgEnv (L)    b/1.0 (m,L)    d/1.0    (@,L)
   a/1.0  (L)    c/1.0 (o,L)    mkl/10.3 (L)
ProjectDIR/rt/properties/mf/bio
   goolfc/2.7.10/GROMACS/4.6.5 (E)
ProjectDIR/rt/properties/mf/cae
   iomkl/14.0.1/OpenFOAM/2.2.2 (T)
  Where:
   @:  built natively for MIC and GPU and offload to the MIC
   E:  Experimental
   L:  Module is loaded
   T:  Testing
   m:  built for host and native MIC
   o:  built for offload to the MIC only
If the avail list is too long consider trying:
"module --default avail" or "ml -d av" to just list the default modules.
"module overview" or "ml ov" to display the number of modules for each name.
Use "module spider" to find all possible modules and extensions.
Use "module keyword key1 key2 ..." to search for all possible modules matching any of the "keys".
