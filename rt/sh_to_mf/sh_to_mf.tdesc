-- -*- lua -*-
local testName = "sh_to_mf"

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
   ]],
   keywords = {testName },

   active   = true,
   testName = testName,
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     MODULEPATH=$(testDir)/mf; export MODULEPATH

     remove_generated_lmod_files s.log 

     unset -f fooBar > /dev/null 2> /dev/null

     runLmod --version                                            # 1    
     ORIG_LD=${LD_LIBRARY_PATH}
     export LD_LIBRARY_PATH="/df/gh${ORIG_LD:+:}${ORIG_LD}"
     export FOO_ESC='\['
     export CI_RUNNER_TAGS = '["ansible", "yaml"]',
     runSh2MF             $(testDir)/tstScript.sh                 # 2
     runSh2MF  --to TCL   $(testDir)/tstScript.sh                 # 3 
     runSh2MF             $(testDir)/path_both_ends.sh            # 4        
     runSh2MF  --from csh $(testDir)/cshScript.csh                # 5
     runSh2MF             $(testDir)/broken.sh                    # 6
     runSh2MF             $(testDir)/unalias.sh                   # 7 
     runSh2MF             $(testDir)/spack_foo.sh                 # 8
    
     export LD_LIBRARY_PATH="bar${LD_LIBRARY_PATH:+:}${LD_LIBRARY_PATH}"
     runSh2MF             $(testDir)/tst2.sh                      # 9 
     runLmod  show wrapperSh/1.0                                  #10
     runLmod  load wrapperSh/1.0                                  #11
     runLmod  show wrapperSh/1.0                                  #12
     runLmod  refresh                                             #13
     runLmod  list                                                #14
     runLmod  --mt                                                #15
     runLmod  unload wrapperSh/1.0                                #16
     runLmod  load   brokenSh/1.0                                 #17
     runLmod  load   wrapperSh/1.0                                #18
     runLmod  save                                                #19
     runBase  export LD_LIBRARY_PATH="foo${ORIG_LD:+:}${ORIG_LD}" #20
     runLmod  restore                                             #21
     runLmod  --mt                                                #22
     runLmod  load   conda/24.3                                   #23


     unsetMT

     MODULEPATH=$(outputDir)/mf; export MODULEPATH
     mkdir -p $MODULEPATH/A

     buildSh2MF  --to TCL   $(testDir)/tstScript.sh > $MODULEPATH/A/1.0
     runLmod load A                                            #24
     runLmod list                                              #25

     HOME=$ORIG_HOME
     cat _stdout.[0-9][0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f results.csv
     wrapperDiff --csv results.csv $(testDir)/out.txt out.txt
     wrapperDiff --csv results.csv $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) results.csv
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
